Dump of assembler code for function example:
   0x0000000000001270 <+0>:	vmovd  %edi,%xmm0
   0x0000000000001274 <+4>:	vpbroadcastd %xmm0,%xmm0
   0x0000000000001279 <+9>:	lea    0x35c0(%rip),%rax        # 0x4840 <assign+2032>
   0x0000000000001280 <+16>:	xor    %ecx,%ecx
   0x0000000000001282 <+18>:	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   0x0000000000001290 <+32>:	xor    %edx,%edx
   0x0000000000001292 <+34>:	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
   0x00000000000012a0 <+48>:	vmovdqa %xmm0,-0x7f0(%rax,%rdx,4)
   0x00000000000012a9 <+57>:	vmovdqa %xmm0,-0x7e0(%rax,%rdx,4)
   0x00000000000012b2 <+66>:	vmovdqa %xmm0,-0x7d0(%rax,%rdx,4)
   0x00000000000012bb <+75>:	vmovdqa %xmm0,-0x7c0(%rax,%rdx,4)
   0x00000000000012c4 <+84>:	vmovdqa %xmm0,-0x7b0(%rax,%rdx,4)
   0x00000000000012cd <+93>:	vmovdqa %xmm0,-0x7a0(%rax,%rdx,4)
   0x00000000000012d6 <+102>:	vmovdqa %xmm0,-0x790(%rax,%rdx,4)
   0x00000000000012df <+111>:	vmovdqa %xmm0,-0x780(%rax,%rdx,4)
   0x00000000000012e8 <+120>:	vmovdqa %xmm0,-0x770(%rax,%rdx,4)
   0x00000000000012f1 <+129>:	vmovdqa %xmm0,-0x760(%rax,%rdx,4)
   0x00000000000012fa <+138>:	vmovdqa %xmm0,-0x750(%rax,%rdx,4)
   0x0000000000001303 <+147>:	vmovdqa %xmm0,-0x740(%rax,%rdx,4)
   0x000000000000130c <+156>:	vmovdqa %xmm0,-0x730(%rax,%rdx,4)
   0x0000000000001315 <+165>:	vmovdqa %xmm0,-0x720(%rax,%rdx,4)
   0x000000000000131e <+174>:	vmovdqa %xmm0,-0x710(%rax,%rdx,4)
   0x0000000000001327 <+183>:	vmovdqa %xmm0,-0x700(%rax,%rdx,4)
   0x0000000000001330 <+192>:	vmovdqa %xmm0,-0x6f0(%rax,%rdx,4)
   0x0000000000001339 <+201>:	vmovdqa %xmm0,-0x6e0(%rax,%rdx,4)
   0x0000000000001342 <+210>:	vmovdqa %xmm0,-0x6d0(%rax,%rdx,4)
   0x000000000000134b <+219>:	vmovdqa %xmm0,-0x6c0(%rax,%rdx,4)
   0x0000000000001354 <+228>:	vmovdqa %xmm0,-0x6b0(%rax,%rdx,4)
   0x000000000000135d <+237>:	vmovdqa %xmm0,-0x6a0(%rax,%rdx,4)
   0x0000000000001366 <+246>:	vmovdqa %xmm0,-0x690(%rax,%rdx,4)
   0x000000000000136f <+255>:	vmovdqa %xmm0,-0x680(%rax,%rdx,4)
   0x0000000000001378 <+264>:	vmovdqa %xmm0,-0x670(%rax,%rdx,4)
   0x0000000000001381 <+273>:	vmovdqa %xmm0,-0x660(%rax,%rdx,4)
   0x000000000000138a <+282>:	vmovdqa %xmm0,-0x650(%rax,%rdx,4)
   0x0000000000001393 <+291>:	vmovdqa %xmm0,-0x640(%rax,%rdx,4)
   0x000000000000139c <+300>:	vmovdqa %xmm0,-0x630(%rax,%rdx,4)
   0x00000000000013a5 <+309>:	vmovdqa %xmm0,-0x620(%rax,%rdx,4)
   0x00000000000013ae <+318>:	vmovdqa %xmm0,-0x610(%rax,%rdx,4)
   0x00000000000013b7 <+327>:	vmovdqa %xmm0,-0x600(%rax,%rdx,4)
   0x00000000000013c0 <+336>:	vmovdqa %xmm0,-0x5f0(%rax,%rdx,4)
   0x00000000000013c9 <+345>:	vmovdqa %xmm0,-0x5e0(%rax,%rdx,4)
   0x00000000000013d2 <+354>:	vmovdqa %xmm0,-0x5d0(%rax,%rdx,4)
   0x00000000000013db <+363>:	vmovdqa %xmm0,-0x5c0(%rax,%rdx,4)
   0x00000000000013e4 <+372>:	vmovdqa %xmm0,-0x5b0(%rax,%rdx,4)
   0x00000000000013ed <+381>:	vmovdqa %xmm0,-0x5a0(%rax,%rdx,4)
   0x00000000000013f6 <+390>:	vmovdqa %xmm0,-0x590(%rax,%rdx,4)
   0x00000000000013ff <+399>:	vmovdqa %xmm0,-0x580(%rax,%rdx,4)
   0x0000000000001408 <+408>:	vmovdqa %xmm0,-0x570(%rax,%rdx,4)
   0x0000000000001411 <+417>:	vmovdqa %xmm0,-0x560(%rax,%rdx,4)
   0x000000000000141a <+426>:	vmovdqa %xmm0,-0x550(%rax,%rdx,4)
   0x0000000000001423 <+435>:	vmovdqa %xmm0,-0x540(%rax,%rdx,4)
   0x000000000000142c <+444>:	vmovdqa %xmm0,-0x530(%rax,%rdx,4)
   0x0000000000001435 <+453>:	vmovdqa %xmm0,-0x520(%rax,%rdx,4)
   0x000000000000143e <+462>:	vmovdqa %xmm0,-0x510(%rax,%rdx,4)
   0x0000000000001447 <+471>:	vmovdqa %xmm0,-0x500(%rax,%rdx,4)
   0x0000000000001450 <+480>:	vmovdqa %xmm0,-0x4f0(%rax,%rdx,4)
   0x0000000000001459 <+489>:	vmovdqa %xmm0,-0x4e0(%rax,%rdx,4)
   0x0000000000001462 <+498>:	vmovdqa %xmm0,-0x4d0(%rax,%rdx,4)
   0x000000000000146b <+507>:	vmovdqa %xmm0,-0x4c0(%rax,%rdx,4)
   0x0000000000001474 <+516>:	vmovdqa %xmm0,-0x4b0(%rax,%rdx,4)
   0x000000000000147d <+525>:	vmovdqa %xmm0,-0x4a0(%rax,%rdx,4)
   0x0000000000001486 <+534>:	vmovdqa %xmm0,-0x490(%rax,%rdx,4)
   0x000000000000148f <+543>:	vmovdqa %xmm0,-0x480(%rax,%rdx,4)
   0x0000000000001498 <+552>:	vmovdqa %xmm0,-0x470(%rax,%rdx,4)
   0x00000000000014a1 <+561>:	vmovdqa %xmm0,-0x460(%rax,%rdx,4)
   0x00000000000014aa <+570>:	vmovdqa %xmm0,-0x450(%rax,%rdx,4)
   0x00000000000014b3 <+579>:	vmovdqa %xmm0,-0x440(%rax,%rdx,4)
   0x00000000000014bc <+588>:	vmovdqa %xmm0,-0x430(%rax,%rdx,4)
   0x00000000000014c5 <+597>:	vmovdqa %xmm0,-0x420(%rax,%rdx,4)
   0x00000000000014ce <+606>:	vmovdqa %xmm0,-0x410(%rax,%rdx,4)
   0x00000000000014d7 <+615>:	vmovdqa %xmm0,-0x400(%rax,%rdx,4)
   0x00000000000014e0 <+624>:	vmovdqa %xmm0,-0x3f0(%rax,%rdx,4)
   0x00000000000014e9 <+633>:	vmovdqa %xmm0,-0x3e0(%rax,%rdx,4)
   0x00000000000014f2 <+642>:	vmovdqa %xmm0,-0x3d0(%rax,%rdx,4)
   0x00000000000014fb <+651>:	vmovdqa %xmm0,-0x3c0(%rax,%rdx,4)
   0x0000000000001504 <+660>:	vmovdqa %xmm0,-0x3b0(%rax,%rdx,4)
   0x000000000000150d <+669>:	vmovdqa %xmm0,-0x3a0(%rax,%rdx,4)
   0x0000000000001516 <+678>:	vmovdqa %xmm0,-0x390(%rax,%rdx,4)
   0x000000000000151f <+687>:	vmovdqa %xmm0,-0x380(%rax,%rdx,4)
   0x0000000000001528 <+696>:	vmovdqa %xmm0,-0x370(%rax,%rdx,4)
   0x0000000000001531 <+705>:	vmovdqa %xmm0,-0x360(%rax,%rdx,4)
   0x000000000000153a <+714>:	vmovdqa %xmm0,-0x350(%rax,%rdx,4)
   0x0000000000001543 <+723>:	vmovdqa %xmm0,-0x340(%rax,%rdx,4)
   0x000000000000154c <+732>:	vmovdqa %xmm0,-0x330(%rax,%rdx,4)
   0x0000000000001555 <+741>:	vmovdqa %xmm0,-0x320(%rax,%rdx,4)
   0x000000000000155e <+750>:	vmovdqa %xmm0,-0x310(%rax,%rdx,4)
   0x0000000000001567 <+759>:	vmovdqa %xmm0,-0x300(%rax,%rdx,4)
   0x0000000000001570 <+768>:	vmovdqa %xmm0,-0x2f0(%rax,%rdx,4)
   0x0000000000001579 <+777>:	vmovdqa %xmm0,-0x2e0(%rax,%rdx,4)
   0x0000000000001582 <+786>:	vmovdqa %xmm0,-0x2d0(%rax,%rdx,4)
   0x000000000000158b <+795>:	vmovdqa %xmm0,-0x2c0(%rax,%rdx,4)
   0x0000000000001594 <+804>:	vmovdqa %xmm0,-0x2b0(%rax,%rdx,4)
   0x000000000000159d <+813>:	vmovdqa %xmm0,-0x2a0(%rax,%rdx,4)
   0x00000000000015a6 <+822>:	vmovdqa %xmm0,-0x290(%rax,%rdx,4)
   0x00000000000015af <+831>:	vmovdqa %xmm0,-0x280(%rax,%rdx,4)
   0x00000000000015b8 <+840>:	vmovdqa %xmm0,-0x270(%rax,%rdx,4)
   0x00000000000015c1 <+849>:	vmovdqa %xmm0,-0x260(%rax,%rdx,4)
   0x00000000000015ca <+858>:	vmovdqa %xmm0,-0x250(%rax,%rdx,4)
   0x00000000000015d3 <+867>:	vmovdqa %xmm0,-0x240(%rax,%rdx,4)
   0x00000000000015dc <+876>:	vmovdqa %xmm0,-0x230(%rax,%rdx,4)
   0x00000000000015e5 <+885>:	vmovdqa %xmm0,-0x220(%rax,%rdx,4)
   0x00000000000015ee <+894>:	vmovdqa %xmm0,-0x210(%rax,%rdx,4)
   0x00000000000015f7 <+903>:	vmovdqa %xmm0,-0x200(%rax,%rdx,4)
   0x0000000000001600 <+912>:	vmovdqa %xmm0,-0x1f0(%rax,%rdx,4)
   0x0000000000001609 <+921>:	vmovdqa %xmm0,-0x1e0(%rax,%rdx,4)
   0x0000000000001612 <+930>:	vmovdqa %xmm0,-0x1d0(%rax,%rdx,4)
   0x000000000000161b <+939>:	vmovdqa %xmm0,-0x1c0(%rax,%rdx,4)
   0x0000000000001624 <+948>:	vmovdqa %xmm0,-0x1b0(%rax,%rdx,4)
   0x000000000000162d <+957>:	vmovdqa %xmm0,-0x1a0(%rax,%rdx,4)
   0x0000000000001636 <+966>:	vmovdqa %xmm0,-0x190(%rax,%rdx,4)
   0x000000000000163f <+975>:	vmovdqa %xmm0,-0x180(%rax,%rdx,4)
   0x0000000000001648 <+984>:	vmovdqa %xmm0,-0x170(%rax,%rdx,4)
   0x0000000000001651 <+993>:	vmovdqa %xmm0,-0x160(%rax,%rdx,4)
   0x000000000000165a <+1002>:	vmovdqa %xmm0,-0x150(%rax,%rdx,4)
   0x0000000000001663 <+1011>:	vmovdqa %xmm0,-0x140(%rax,%rdx,4)
   0x000000000000166c <+1020>:	vmovdqa %xmm0,-0x130(%rax,%rdx,4)
   0x0000000000001675 <+1029>:	vmovdqa %xmm0,-0x120(%rax,%rdx,4)
   0x000000000000167e <+1038>:	vmovdqa %xmm0,-0x110(%rax,%rdx,4)
   0x0000000000001687 <+1047>:	vmovdqa %xmm0,-0x100(%rax,%rdx,4)
   0x0000000000001690 <+1056>:	vmovdqa %xmm0,-0xf0(%rax,%rdx,4)
   0x0000000000001699 <+1065>:	vmovdqa %xmm0,-0xe0(%rax,%rdx,4)
   0x00000000000016a2 <+1074>:	vmovdqa %xmm0,-0xd0(%rax,%rdx,4)
   0x00000000000016ab <+1083>:	vmovdqa %xmm0,-0xc0(%rax,%rdx,4)
   0x00000000000016b4 <+1092>:	vmovdqa %xmm0,-0xb0(%rax,%rdx,4)
   0x00000000000016bd <+1101>:	vmovdqa %xmm0,-0xa0(%rax,%rdx,4)
   0x00000000000016c6 <+1110>:	vmovdqa %xmm0,-0x90(%rax,%rdx,4)
   0x00000000000016cf <+1119>:	vmovdqa %xmm0,-0x80(%rax,%rdx,4)
   0x00000000000016d5 <+1125>:	vmovdqa %xmm0,-0x70(%rax,%rdx,4)
   0x00000000000016db <+1131>:	vmovdqa %xmm0,-0x60(%rax,%rdx,4)
   0x00000000000016e1 <+1137>:	vmovdqa %xmm0,-0x50(%rax,%rdx,4)
   0x00000000000016e7 <+1143>:	vmovdqa %xmm0,-0x40(%rax,%rdx,4)
   0x00000000000016ed <+1149>:	vmovdqa %xmm0,-0x30(%rax,%rdx,4)
   0x00000000000016f3 <+1155>:	vmovdqa %xmm0,-0x20(%rax,%rdx,4)
   0x00000000000016f9 <+1161>:	vmovdqa %xmm0,-0x10(%rax,%rdx,4)
   0x00000000000016ff <+1167>:	vmovdqa %xmm0,(%rax,%rdx,4)
   0x0000000000001704 <+1172>:	add    $0x200,%rdx
   0x000000000000170b <+1179>:	cmp    $0x400,%rdx
   0x0000000000001712 <+1186>:	jne    0x12a0 <example+48>
   0x0000000000001718 <+1192>:	inc    %rcx
   0x000000000000171b <+1195>:	add    $0x1000,%rax
   0x0000000000001721 <+1201>:	cmp    $0x800,%rcx
   0x0000000000001728 <+1208>:	jne    0x1290 <example+32>
   0x000000000000172e <+1214>:	ret    
End of assembler dump.
